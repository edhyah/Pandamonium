summary.txt
Edward Ahn + esahn + Section H

Class Design
To program Pandamonium, several different classes were created. One of these classes is called Game, which contains the main menu of Pandamonium and links all the other classes together (acting like a main method). Another group of classes consists of sprites, all subclasses of the parent class pygame.sprite.Sprite . Using sprites makes it simple to display objects on the screen because subclasses of the Sprite class inherit various methods (like draw and update methods) from Pygame. As a result, the leaf, clover (which is a subclass of the leaf), panda and basket are all subclasses of the Sprite class. Finally, three classes were created to represent the Classic, Arcade and Multiplayer modes. The Multiplayer class is a subclass of the Arcade class because, other than the number of players there are, the modes are essentially the same.

User Interface
The idea of designing the game so that the user could control the panda from behind was considered (making the user interface like Temple Run) but was abandoned after realizing the difficulty of displaying such animation. Hence, the user interface of the gameplay ultimately ended up being a 2D display where a panda moved horizontally on the screen, with the panda being portrayed in profile (side view of panda). In addition, the game requires a decent amount of instruction which led to the abandonment of the idea of building the help screen to be a single page. However, the settings ended up being a single page so that users are not confused onto what aspects of the game they have control over. Finally, original graphics (the pictures were all drawn by hand) were used for several reasons. First, finding appropriate graphics for this game was extremely difficult, especially considering the need for a sprite sheet of a panda walking to animate the game. Second, integrating images so that discrete images from different parts of the web would synthesize into a clean user interface is difficult. Third, the game is intended to take a bright, bouncy theme, giving hand-drawn images an advantage over more realistic photos. That is also why a staccato, comical theme song and a legato, gentle gameplay song were used in the creation of this game; the contrasting styles of the song captures the childish, comedic nature of Pandamonium.

Pygame Usage
Pygame was used in this game to take advantage of sprites (sprites that are subclasses of Pygame.sprite.Sprite are easier to draw and easier to manipulate than creating a whole new class). Furthermore, Pygame allowed actions such as animation (movement of pictures) to be extremely simple (move_ip, move and update methods) which would have been difficult on Tkinter.